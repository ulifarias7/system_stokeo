// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SistemaStokeo.DAL.DBContext;

#nullable disable

namespace SistemaStokeo.DAL.Migrations
{
    [DbContext(typeof(DbsystemSContext))]
    [Migration("20250531231444_CreateMigrationsTablaMenuRol")]
    partial class CreateMigrationsTablaMenuRol
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SistemaStokeo.MODELS.Categoria", b =>
                {
                    b.Property<int>("IdCategoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_categoria");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCategoria"));

                    b.Property<bool?>("EsActivo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("es_activo")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("FechaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fecha_registro")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("nombre");

                    b.HasKey("IdCategoria")
                        .HasName("PK__Categori__A3C02A109FEFD495");

                    b.HasIndex("Nombre")
                        .IsUnique()
                        .HasDatabaseName("ux_categoria_nombre")
                        .HasFilter("[nombre] IS NOT NULL");

                    b.ToTable("categoria", (string)null);
                });

            modelBuilder.Entity("SistemaStokeo.MODELS.DetalleVenta", b =>
                {
                    b.Property<int>("IdDetalleVenta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_detalle_venta");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDetalleVenta"));

                    b.Property<int?>("Cantidad")
                        .HasColumnType("int")
                        .HasColumnName("cantidad");

                    b.Property<int?>("IdProducto")
                        .HasColumnType("int")
                        .HasColumnName("id_producto");

                    b.Property<int?>("IdVenta")
                        .HasColumnType("int")
                        .HasColumnName("id_venta");

                    b.Property<decimal?>("Precio")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("precio");

                    b.Property<decimal?>("Total")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("total");

                    b.HasKey("IdDetalleVenta")
                        .HasName("PK__DetalleV__BFE2843F5634CEAC");

                    b.HasIndex("IdProducto");

                    b.HasIndex("IdVenta");

                    b.ToTable("detalle_venta", (string)null);
                });

            modelBuilder.Entity("SistemaStokeo.MODELS.Menu", b =>
                {
                    b.Property<int>("IdMenu")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_menu");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMenu"));

                    b.Property<string>("Icono")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("icono");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nombre");

                    b.Property<string>("Url")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("url");

                    b.HasKey("IdMenu")
                        .HasName("PK__Menu__4D7EA8E17A006C80");

                    b.ToTable("menu", (string)null);
                });

            modelBuilder.Entity("SistemaStokeo.MODELS.MenuRol", b =>
                {
                    b.Property<int>("IdMenuRol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_menu_rol");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMenuRol"));

                    b.Property<int?>("IdMenu")
                        .HasColumnType("int")
                        .HasColumnName("id_menu");

                    b.Property<int?>("IdRol")
                        .HasColumnType("int")
                        .HasColumnName("id_rol");

                    b.HasKey("IdMenuRol")
                        .HasName("PK__MenuRol__9D6D61A45301E146");

                    b.HasIndex("IdMenu");

                    b.HasIndex("IdRol");

                    b.ToTable("menu_rol", (string)null);
                });

            modelBuilder.Entity("SistemaStokeo.MODELS.NumeroDocumento", b =>
                {
                    b.Property<int>("IdNumeroDocumento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idNumeroDocumento");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdNumeroDocumento"));

                    b.Property<DateTime?>("FechaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fechaRegistro")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("UltimoNumero")
                        .HasColumnType("int")
                        .HasColumnName("ultimo_Numero");

                    b.HasKey("IdNumeroDocumento")
                        .HasName("PK__NumeroDo__471E421AD9410032");

                    b.ToTable("NumeroDocumento", (string)null);
                });

            modelBuilder.Entity("SistemaStokeo.MODELS.Producto", b =>
                {
                    b.Property<int>("IdProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idProducto");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProducto"));

                    b.Property<bool?>("EsActivo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("esActivo")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("FechaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fechaRegistro")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("IdCategoria")
                        .HasColumnType("int")
                        .HasColumnName("idCategoria");

                    b.Property<string>("Nombre")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nombre");

                    b.Property<decimal?>("Precio")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("precio");

                    b.Property<int?>("Stock")
                        .HasColumnType("int")
                        .HasColumnName("stock");

                    b.HasKey("IdProducto")
                        .HasName("PK__Producto__07F4A1320141252F");

                    b.HasIndex("IdCategoria");

                    b.ToTable("Producto", (string)null);
                });

            modelBuilder.Entity("SistemaStokeo.MODELS.Rol", b =>
                {
                    b.Property<int>("IdRol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_rol");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRol"));

                    b.Property<DateTime?>("fechaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fecha_registro")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("nombre")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("nombre");

                    b.HasKey("IdRol")
                        .HasName("PK__Rol__2A49584CDBF2A9B6");

                    b.HasIndex("nombre")
                        .IsUnique()
                        .HasDatabaseName("ux_rol_name")
                        .HasFilter("[nombre] IS NOT NULL");

                    b.ToTable("rol", (string)null);
                });

            modelBuilder.Entity("SistemaStokeo.MODELS.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idUsuario");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUsuario"));

                    b.Property<string>("Clave")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("clave");

                    b.Property<string>("Correo")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("correo");

                    b.Property<bool?>("EsActivo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("esActivo")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("FechaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fechaRegistro")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("IdRol")
                        .HasColumnType("int");

                    b.Property<string>("NombreCompleto")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nombreCompleto");

                    b.HasKey("IdUsuario")
                        .HasName("PK__Usuario__645723A609CC3DA2");

                    b.HasIndex("IdRol");

                    b.ToTable("Usuario", (string)null);
                });

            modelBuilder.Entity("SistemaStokeo.MODELS.Venta", b =>
                {
                    b.Property<int>("IdVenta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_venta");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdVenta"));

                    b.Property<DateTime?>("FechaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fecha_registro")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("NumeroDocumento")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("numero_documento");

                    b.Property<string>("TipoPago")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("tipo_pago");

                    b.Property<decimal?>("Total")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("total");

                    b.HasKey("IdVenta")
                        .HasName("PK__Venta__077D5614E34BBCE8");

                    b.ToTable("venta", (string)null);
                });

            modelBuilder.Entity("SistemaStokeo.MODELS.DetalleVenta", b =>
                {
                    b.HasOne("SistemaStokeo.MODELS.Producto", "IdProductoNavigation")
                        .WithMany("DetalleVenta")
                        .HasForeignKey("IdProducto")
                        .HasConstraintName("FK__DetalleVe__idPro__5629CD9C");

                    b.HasOne("SistemaStokeo.MODELS.Venta", "IdVentaNavigation")
                        .WithMany("DetalleVenta")
                        .HasForeignKey("IdVenta")
                        .HasConstraintName("FK__DetalleVe__idVen__5535A963");

                    b.Navigation("IdProductoNavigation");

                    b.Navigation("IdVentaNavigation");
                });

            modelBuilder.Entity("SistemaStokeo.MODELS.MenuRol", b =>
                {
                    b.HasOne("SistemaStokeo.MODELS.Menu", "IdMenuNavigation")
                        .WithMany("MenuRols")
                        .HasForeignKey("IdMenu")
                        .HasConstraintName("FK__MenuRol__idMenu__3D5E1FD2");

                    b.HasOne("SistemaStokeo.MODELS.Rol", "IdRolNavigation")
                        .WithMany("MenuRols")
                        .HasForeignKey("IdRol")
                        .HasConstraintName("FK__MenuRol__idRol__3E52440B");

                    b.Navigation("IdMenuNavigation");

                    b.Navigation("IdRolNavigation");
                });

            modelBuilder.Entity("SistemaStokeo.MODELS.Producto", b =>
                {
                    b.HasOne("SistemaStokeo.MODELS.Categoria", "IdCategoriaNavigation")
                        .WithMany("Productos")
                        .HasForeignKey("IdCategoria")
                        .HasConstraintName("FK__Producto__idCate__49C3F6B7");

                    b.Navigation("IdCategoriaNavigation");
                });

            modelBuilder.Entity("SistemaStokeo.MODELS.Usuario", b =>
                {
                    b.HasOne("SistemaStokeo.MODELS.Rol", "IdRolNavigation")
                        .WithMany("Usuarios")
                        .HasForeignKey("IdRol")
                        .HasConstraintName("FK__Usuario__IdRol__412EB0B6");

                    b.Navigation("IdRolNavigation");
                });

            modelBuilder.Entity("SistemaStokeo.MODELS.Categoria", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("SistemaStokeo.MODELS.Menu", b =>
                {
                    b.Navigation("MenuRols");
                });

            modelBuilder.Entity("SistemaStokeo.MODELS.Producto", b =>
                {
                    b.Navigation("DetalleVenta");
                });

            modelBuilder.Entity("SistemaStokeo.MODELS.Rol", b =>
                {
                    b.Navigation("MenuRols");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("SistemaStokeo.MODELS.Venta", b =>
                {
                    b.Navigation("DetalleVenta");
                });
#pragma warning restore 612, 618
        }
    }
}
